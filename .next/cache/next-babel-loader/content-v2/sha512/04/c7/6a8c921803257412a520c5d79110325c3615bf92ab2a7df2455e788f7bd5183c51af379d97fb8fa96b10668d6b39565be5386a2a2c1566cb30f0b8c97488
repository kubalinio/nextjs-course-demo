{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kubal\\\\OneDrive\\\\Pulpit\\\\Sekcja 23 Project Next.js 2\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meeimage,\n    title: props.meetitle,\n    address: props.meeaddress,\n    description: props.meedescription\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n}; // Funkcja musi być stworzna zeby strzworzyć każdą możliwą wersje użytkowania tych wartości\n// Zwraca obiekt w ktorym opisujemy kazy dynamiczny segment wartosci w tym przypadku kazdy meetupId\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/kubal/OneDrive/Pulpit/Sekcja 23 Project Next.js 2/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meeimage","meetitle","meeaddress","meedescription"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,sBACC,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAAK,CAACC,QAA3B;AAAqC,IAAA,KAAK,EAAED,KAAK,CAACE,QAAlD;AAA4D,IAAA,OAAO,EAAEF,KAAK,CAACG,UAA3E;AAAuF,IAAA,WAAW,EAAEH,KAAK,CAACI;AAA1G;AAAA;AAAA;AAAA;AAAA,WADD;AAGA,CAJD,C,CAMA;AACA;;;KAPML,a;;AAqDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n\treturn (\r\n\t\t<MeetupDetail image={props.meeimage} title={props.meetitle} address={props.meeaddress} description={props.meedescription} />\r\n\t);\r\n};\r\n\r\n// Funkcja musi być stworzna zeby strzworzyć każdą możliwą wersje użytkowania tych wartości\r\n// Zwraca obiekt w ktorym opisujemy kazy dynamiczny segment wartosci w tym przypadku kazdy meetupId\r\nexport const getStaticPaths = async () => {\r\n\t// Pobieranie danych z API\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t// Pobieramy wszystkie meetups do listy,  dane _id, nic wiecej\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } })),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data for a single meetup\r\n\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\t// Pobieranie danych z API\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t// Pobieramy tylko pojedynczy meetup,  dane _id, nic wiecej\r\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}