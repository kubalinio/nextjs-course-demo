{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kubal\\\\OneDrive\\\\Pulpit\\\\Sekcja 23 Project Next.js 2\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, _this);\n}; // Funkcja musi być stworzna zeby strzworzyć każdą możliwą wersje użytkowania tych wartości\n// Zwraca obiekt w ktorym opisujemy kazy dynamiczny segment wartosci w tym przypadku kazdy meetupId\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/kubal/OneDrive/Pulpit/Sekcja 23 Project Next.js 2/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CATD,C,CAWA;AACA;;;KAZMN,a;;AA0DN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\n\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n// Funkcja musi być stworzna zeby strzworzyć każdą możliwą wersje użytkowania tych wartości\r\n// Zwraca obiekt w ktorym opisujemy kazy dynamiczny segment wartosci w tym przypadku kazdy meetupId\r\nexport const getStaticPaths = async () => {\r\n\t// Pobieranie danych z API\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t// Pobieramy wszystkie meetups do listy,  dane _id, nic wiecej\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } })),\r\n\t};\r\n};\r\n\r\nexport const getStaticProps = async context => {\r\n\t// fetch data for a single meetup\r\n\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\t// Pobieranie danych z API\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\t// Pobieramy tylko pojedynczy meetup,  dane _id, nic wiecej\r\n\tconst selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeet,\r\n\t\t},\r\n\t};\r\n};\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}