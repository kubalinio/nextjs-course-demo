{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\kubal\\\\OneDrive\\\\Pulpit\\\\Sekcja 23 Project Next.js 2\\\\pages\\\\index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}; // pobiera dane z serwera przed pre-rendering strony JEDEN Z GŁÓWNYCH ELEMENTÓW NEXT.JS\n\n\nexport const getStaticProps = async () => {\n  // Pobieranie danych z API\n  const client = await MongoClient.connect('mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/kubal/OneDrive/Pulpit/Sekcja 23 Project Next.js 2/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,gBAFR;AAGCC,EAAAA,KAAK,EACJ,wHAJF;AAKCC,EAAAA,OAAO,EAAE,iCALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CADqB,EASrB;AACCJ,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,iBAFR;AAGCC,EAAAA,KAAK,EACJ,wHAJF;AAKCC,EAAAA,OAAO,EAAE,kCALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CATqB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACzB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAFD,C,CAIA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,mGADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AACnBjB,QAAAA,KAAK,EAAEiB;AADY,OAAL,CAAlB;AADH,KADD;AAMNC,IAAAA,UAAU,EAAE;AANN,GAAP;AAQA,CArBM;AAuBP,eAAed,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\n\r\nconst DUMMY_MEETUPS = [\r\n\t{\r\n\t\tid: 'm1',\r\n\t\ttitle: 'A First Meetup',\r\n\t\timage:\r\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n\t\taddress: 'Some address 5, 12345 Some City',\r\n\t\tdescription: 'This is a first meetup!',\r\n\t},\r\n\t{\r\n\t\tid: 'm2',\r\n\t\ttitle: 'A Second Meetup',\r\n\t\timage:\r\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n\t\taddress: 'Some address 10, 12345 Some City',\r\n\t\tdescription: 'This is a second meetup!',\r\n\t},\r\n];\r\n\r\nconst HomePage = props => {\r\n\treturn <MeetupList meetups={props.meetups} />;\r\n};\r\n\r\n// pobiera dane z serwera przed pre-rendering strony JEDEN Z GŁÓWNYCH ELEMENTÓW NEXT.JS\r\nexport const getStaticProps = async () => {\r\n\t// Pobieranie danych z API\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://kubalinio:qwer1234@cluster0.azkhkts.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find().toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetups: meetups.map(meetup => ({\r\n                title: meetup\r\n            })),\r\n\t\t},\r\n\t\trevalidate: 1,\r\n\t};\r\n};\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}